{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jblancoh/Projects/Hospital_Nextjs/pages/services/index.js\";\nimport React from 'react';\nimport Navbar from \"../../components/Navbar/Navbar\";\n\nconst Services = () => {\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    fetch('/api/services').then(response => response.json()).then(json => console.log('json', json)); // return () => {\n    //   cleanup\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Servicios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Services;","map":{"version":3,"sources":["/Users/jblancoh/Projects/Hospital_Nextjs/pages/services/index.js"],"names":["React","Navbar","Services","services","setServices","useState","useEffect","fetch","then","response","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB,CAFhB,EADc,CAId;AACA;AACA;AACD,GAPQ,EAON,EAPM,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;AAkBA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport Navbar from \"../../components/Navbar/Navbar\"\n\nconst Services = () => {\n  const [services, setServices] = useState([])\n  useEffect(() => {\n    fetch('/api/services')\n      .then(response => response.json())\n      .then(json => console.log('json', json))\n    // return () => {\n    //   cleanup\n    // }\n  }, [])\n  return (\n    <div>\n      <Navbar />\n      <h1>Servicios</h1>\n    </div>\n  );\n}\n\nexport default Services;"]},"metadata":{},"sourceType":"module"}
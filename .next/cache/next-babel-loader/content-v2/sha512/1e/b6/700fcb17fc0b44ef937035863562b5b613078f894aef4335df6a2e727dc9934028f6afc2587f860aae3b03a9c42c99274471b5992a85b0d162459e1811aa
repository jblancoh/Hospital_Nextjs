{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jblancoh/Projects/Hospital_Nextjs/components/Navbar/Navbar.js\";\nimport React from 'react';\nimport Link from \"next/link\";\nimport { Menu, MenuItem, IconButton, Icon, MenuButton, MenuList, Button, Flex, Box, Text, Stack, Popover, PopoverTrigger, PopoverContent, useDisclosure, useColorModeValue } from \"@chakra-ui/react\";\nimport { ChevronDownIcon, ChevronRightIcon, CloseIcon, HamburgerIcon } from \"@chakra-ui/icons\";\nimport Logo from '@components/Logo/Logo';\n\nconst MenuItems = ({\n  children,\n  to = '/'\n}) => /*#__PURE__*/_jsxDEV(MenuItem, {\n  children: /*#__PURE__*/_jsxDEV(Link, {\n    href: to,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n\nconst Navbar = () => {\n  const {\n    isOpen,\n    onToggle\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      bg: useColorModeValue('white', 'gray.800'),\n      color: useColorModeValue('gray.600', 'white'),\n      minH: '60px',\n      py: {\n        base: 2\n      },\n      px: {\n        base: 4\n      },\n      borderBottom: 1,\n      borderStyle: 'solid',\n      borderColor: useColorModeValue('gray.200', 'gray.900'),\n      align: 'center',\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: {\n          base: 1,\n          md: 'auto'\n        },\n        ml: {\n          base: -2\n        },\n        display: {\n          base: 'flex',\n          md: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onToggle,\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n            w: 3,\n            h: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n            w: 5,\n            h: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 52\n          }, this),\n          variant: 'ghost',\n          \"aria-label\": 'Toggle Navigation'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: {\n          base: 1\n        },\n        justify: {\n          base: 'center',\n          md: 'start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          display: {\n            base: 'none',\n            md: 'flex'\n          },\n          ml: 10,\n          children: /*#__PURE__*/_jsxDEV(DesktopNav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nconst DesktopNav = () => {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: 'row',\n    spacing: 4,\n    children: NAV_ITEMS.map(navItem => /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Popover, {\n        children: /*#__PURE__*/_jsxDEV(PopoverTrigger, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            p: 2,\n            href: navItem.href ? navItem.href : '#',\n            fontSize: 'sm',\n            fontWeight: 500,\n            color: useColorModeValue('gray.600', 'gray.200'),\n            _hover: {\n              textDecoration: 'none',\n              color: useColorModeValue('gray.800', 'white')\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: navItem.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, navItem.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nconst DesktopSubNav = ({\n  label,\n  href,\n  subLabel\n}) => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    role: 'group',\n    display: 'block',\n    p: 2,\n    rounded: 'md',\n    _hover: {\n      bg: useColorModeValue('pink.50', 'gray.900')\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: 'row',\n      align: 'center',\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          transition: 'all .3s ease',\n          _groupHover: {\n            color: 'pink.400'\n          },\n          fontWeight: 500,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 'sm',\n          children: subLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        transition: 'all .3s ease',\n        transform: 'translateX(-10px)',\n        opacity: 0,\n        _groupHover: {\n          opacity: '100%',\n          transform: 'translateX(0)'\n        },\n        justify: 'flex-end',\n        align: 'center',\n        flex: 1,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          color: 'pink.400',\n          w: 5,\n          h: 5,\n          as: ChevronRightIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\nconst NAV_ITEMS = [{\n  label: 'Inspiration',\n  children: [{\n    label: 'Explore Design Work',\n    subLabel: 'Trending Design to inspire you',\n    href: '#'\n  }, {\n    label: 'New & Noteworthy',\n    subLabel: 'Up-and-coming Designers',\n    href: '#'\n  }]\n}, {\n  label: 'Find Work',\n  children: [{\n    label: 'Job Board',\n    subLabel: 'Find your dream design job',\n    href: '#'\n  }, {\n    label: 'Freelance Projects',\n    subLabel: 'An exclusive list for contract work',\n    href: '#'\n  }]\n}, {\n  label: 'Learn Design',\n  href: '#'\n}, {\n  label: 'Hire Designers',\n  href: '#'\n}];\nexport default Navbar;","map":{"version":3,"sources":["/Users/jblancoh/Projects/Hospital_Nextjs/components/Navbar/Navbar.js"],"names":["React","Link","Menu","MenuItem","IconButton","Icon","MenuButton","MenuList","Button","Flex","Box","Text","Stack","Popover","PopoverTrigger","PopoverContent","useDisclosure","useColorModeValue","ChevronDownIcon","ChevronRightIcon","CloseIcon","HamburgerIcon","Logo","MenuItems","children","to","Navbar","isOpen","onToggle","base","md","DesktopNav","NAV_ITEMS","map","navItem","href","textDecoration","color","label","DesktopSubNav","subLabel","bg","opacity","transform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from \"next/link\"\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  Icon,\n  MenuButton,\n  MenuList,\n  Button,\n  Flex,\n  Box,\n  Text,\n  Stack,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useDisclosure,\n  useColorModeValue\n} from \"@chakra-ui/react\"\nimport { ChevronDownIcon, ChevronRightIcon, CloseIcon, HamburgerIcon } from \"@chakra-ui/icons\"\nimport Logo from '@components/Logo/Logo'\n\nconst MenuItems = ({ children, to = '/' }) => (\n  <MenuItem>\n    <Link href={to}>{children}</Link>\n  </MenuItem>\n);\n\n\nconst Navbar = () => {\n  const { isOpen, onToggle } = useDisclosure();\n  return (\n    <Box>\n      <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\n        align={'center'}>\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}>\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Logo />\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <Box key={navItem.label}>\n          <Popover>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ? navItem.href : '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                color={useColorModeValue('gray.600', 'gray.200')}\n                _hover={{\n                  textDecoration: 'none',\n                  color: useColorModeValue('gray.800', 'white'),\n                }}>\n                <Button>{navItem.label}</Button>\n              </Link>\n            </PopoverTrigger>\n            {/* <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ?? '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                color={useColorModeValue('gray.600', 'gray.200')}\n                _hover={{\n                  textDecoration: 'none',\n                  color: useColorModeValue('gray.800', 'white'),\n                }}>\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n            <PopoverContent>\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverHeader>Confirmation!</PopoverHeader>\n              <PopoverBody>Are you sure you want to have that milkshake?</PopoverBody>\n            </PopoverContent> */}\n          </Popover>\n          {/* <Popover trigger={'hover'} placement={'bottom-start'}>\n            <PopoverTrigger>\n              \n            </PopoverTrigger>\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={'xl'}\n                bg={useColorModeValue('white', 'gray.800')}\n                p={4}\n                rounded={'xl'}\n                minW={'sm'}>\n                <Stack>\n                  {console.log('navItem children', navItem.children)}\n                  {navItem.children.map((child) => (\n                    <DesktopSubNav key={child.label} {...child} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover> */}\n        </Box>\n      ))}\n    </Stack>\n  )\n}\n\nconst DesktopSubNav = ({ label, href, subLabel }) => {\n  return (\n    <Link\n      href={href}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}>\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}>\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst NAV_ITEMS = [\n  {\n    label: 'Inspiration',\n    children: [\n      {\n        label: 'Explore Design Work',\n        subLabel: 'Trending Design to inspire you',\n        href: '#',\n      },\n      {\n        label: 'New & Noteworthy',\n        subLabel: 'Up-and-coming Designers',\n        href: '#',\n      },\n    ],\n  },\n  {\n    label: 'Find Work',\n    children: [\n      {\n        label: 'Job Board',\n        subLabel: 'Find your dream design job',\n        href: '#',\n      },\n      {\n        label: 'Freelance Projects',\n        subLabel: 'An exclusive list for contract work',\n        href: '#',\n      },\n    ],\n  },\n  {\n    label: 'Learn Design',\n    href: '#',\n  },\n  {\n    label: 'Hire Designers',\n    href: '#',\n  },\n];\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}